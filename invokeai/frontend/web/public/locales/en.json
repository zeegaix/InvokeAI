{
    "accessibility": {
        "copyMetadataJson": "Copy metadata JSON",
        "createIssue": "Create Issue",
        "exitViewer": "Exit Viewer",
        "flipHorizontally": "Flip Horizontally",
        "flipVertically": "Flip Vertically",
        "invokeProgressBar": "Invoke progress bar",
        "menu": "Menu",
        "mode": "Mode",
        "modelSelect": "Model Select",
        "modifyConfig": "Modify Config",
        "nextImage": "Next Image",
        "previousImage": "Previous Image",
        "reset": "Reset",
        "resetUI": "$t(accessibility.reset) UI",
        "rotateClockwise": "Rotate Clockwise",
        "rotateCounterClockwise": "Rotate Counter-Clockwise",
        "showGalleryPanel": "Show Gallery Panel",
        "showOptionsPanel": "Show Side Panel",
        "toggleAutoscroll": "Toggle autoscroll",
        "toggleLogViewer": "Toggle Log Viewer",
        "uploadImage": "Upload Image",
        "useThisParameter": "Use this parameter",
        "zoomIn": "Zoom In",
        "zoomOut": "Zoom Out",
        "loadMore": "Load More"
    },
    "boards": {
        "addBoard": "Add Board",
        "autoAddBoard": "Auto-Add Board",
        "bottomMessage": "Deleting this board and its images will reset any features currently using them.",
        "cancel": "Cancel",
        "changeBoard": "Change Board",
        "clearSearch": "Clear Search",
        "deleteBoard": "Delete Board",
        "deleteBoardAndImages": "Delete Board and Images",
        "deleteBoardOnly": "Delete Board Only",
        "deletedBoardsCannotbeRestored": "Deleted boards cannot be restored",
        "loading": "Loading...",
        "menuItemAutoAdd": "Auto-add to this Board",
        "move": "Move",
        "movingImagesToBoard_one": "Moving {{count}} image to board:",
        "movingImagesToBoard_other": "Moving {{count}} images to board:",
        "myBoard": "My Board",
        "noMatching": "No matching Boards",
        "searchBoard": "Search Boards...",
        "selectBoard": "Select a Board",
        "topMessage": "This board contains images used in the following features:",
        "uncategorized": "Uncategorized",
        "downloadBoard": "Download Board"
    },
    "common": {
        "accept": "Accept",
        "advanced": "Advanced",
        "ai": "ai",
        "areYouSure": "Are you sure?",
        "auto": "Auto",
        "back": "Back",
        "batch": "Batch Manager",
        "cancel": "Cancel",
        "copyError": "$t(gallery.copy) Error",
        "close": "Close",
        "on": "On",
        "checkpoint": "Checkpoint",
        "communityLabel": "Community",
        "controlNet": "ControlNet",
        "controlAdapter": "Control Adapter",
        "data": "Data",
        "delete": "Delete",
        "details": "Details",
        "direction": "Direction",
        "ipAdapter": "IP Adapter",
        "t2iAdapter": "T2I Adapter",
        "darkMode": "Dark Mode",
        "discordLabel": "Discord",
        "dontAskMeAgain": "Don't ask me again",
        "error": "Error",
        "file": "File",
        "folder": "Folder",
        "format": "format",
        "generate": "Generate",
        "githubLabel": "Github",
        "hotkeysLabel": "Hotkeys",
        "imagePrompt": "Image Prompt",
        "imageFailedToLoad": "Unable to Load Image",
        "img2img": "Image To Image",
        "inpaint": "inpaint",
        "input": "Input",
        "installed": "Installed",
        "langArabic": "العربية",
        "langBrPortuguese": "Português do Brasil",
        "langDutch": "Nederlands",
        "langEnglish": "English",
        "langFrench": "Français",
        "langGerman": "German",
        "langHebrew": "Hebrew",
        "langItalian": "Italiano",
        "langJapanese": "日本語",
        "langKorean": "한국어",
        "langPolish": "Polski",
        "langPortuguese": "Português",
        "langRussian": "Русский",
        "langSimplifiedChinese": "简体中文",
        "langSpanish": "Español",
        "languagePickerLabel": "Language",
        "langUkranian": "Украї́нська",
        "lightMode": "Light Mode",
        "linear": "Linear",
        "load": "Load",
        "loading": "Loading",
        "loadingInvokeAI": "Loading Invoke AI",
        "learnMore": "Learn More",
        "modelManager": "Model Manager",
        "nodeEditor": "Node Editor",
        "nodes": "Workflow Editor",
        "nodesDesc": "A node based system for the generation of images is under development currently. Stay tuned for updates about this amazing feature.",
        "notInstalled": "Not $t(common.installed)",
        "openInNewTab": "Open in New Tab",
        "orderBy": "Order By",
        "outpaint": "outpaint",
        "outputs": "Outputs",
        "postProcessDesc1": "Invoke AI offers a wide variety of post processing features. Image Upscaling and Face Restoration are already available in the WebUI. You can access them from the Advanced Options menu of the Text To Image and Image To Image tabs. You can also process images directly, using the image action buttons above the current image display or in the viewer.",
        "postProcessDesc2": "A dedicated UI will be released soon to facilitate more advanced post processing workflows.",
        "postProcessDesc3": "The Invoke AI Command Line Interface offers various other features including Embiggen.",
        "postprocessing": "Post Processing",
        "postProcessing": "Post Processing",
        "random": "Random",
        "reportBugLabel": "Report Bug",
        "safetensors": "Safetensors",
        "save": "Save",
        "saveAs": "Save As",
        "settingsLabel": "Settings",
        "simple": "Simple",
        "somethingWentWrong": "Something went wrong",
        "statusConnected": "Connected",
        "statusConvertingModel": "Converting Model",
        "statusDisconnected": "Disconnected",
        "statusError": "Error",
        "statusGenerating": "Generating",
        "statusGeneratingImageToImage": "Generating Image To Image",
        "statusGeneratingInpainting": "Generating Inpainting",
        "statusGeneratingOutpainting": "Generating Outpainting",
        "statusGeneratingTextToImage": "Generating Text To Image",
        "statusGenerationComplete": "Generation Complete",
        "statusIterationComplete": "Iteration Complete",
        "statusLoadingModel": "Loading Model",
        "statusMergedModels": "Models Merged",
        "statusMergingModels": "Merging Models",
        "statusModelChanged": "Model Changed",
        "statusModelConverted": "Model Converted",
        "statusPreparing": "Preparing",
        "statusProcessing": "Processing",
        "statusProcessingCanceled": "Processing Canceled",
        "statusProcessingComplete": "Processing Complete",
        "statusRestoringFaces": "Restoring Faces",
        "statusRestoringFacesCodeFormer": "Restoring Faces (CodeFormer)",
        "statusRestoringFacesGFPGAN": "Restoring Faces (GFPGAN)",
        "statusSavingImage": "Saving Image",
        "statusUpscaling": "Upscaling",
        "statusUpscalingESRGAN": "Upscaling (ESRGAN)",
        "template": "Template",
        "training": "Training",
        "trainingDesc1": "A dedicated workflow for training your own embeddings and checkpoints using Textual Inversion and Dreambooth from the web interface.",
        "trainingDesc2": "InvokeAI already supports training custom embeddourings using Textual Inversion using the main script.",
        "txt2img": "Text To Image",
        "unifiedCanvas": "Unified Canvas",
        "unknown": "Unknown",
        "upload": "Upload",
        "updated": "Updated",
        "created": "Created",
        "prevPage": "Previous Page",
        "nextPage": "Next Page",
        "unknownError": "Unknown Error",
        "unsaved": "Unsaved"
    },
    "controlnet": {
        "controlAdapter_one": "Control Adapter",
        "controlAdapter_other": "Control Adapters",
        "controlnet": "$t(controlnet.controlAdapter_one) #{{number}} ($t(common.controlNet))",
        "ip_adapter": "$t(controlnet.controlAdapter_one) #{{number}} ($t(common.ipAdapter))",
        "t2i_adapter": "$t(controlnet.controlAdapter_one) #{{number}} ($t(common.t2iAdapter))",
        "addControlNet": "Add $t(common.controlNet)",
        "addIPAdapter": "Add $t(common.ipAdapter)",
        "addT2IAdapter": "Add $t(common.t2iAdapter)",
        "controlNetEnabledT2IDisabled": "$t(common.controlNet) enabled, $t(common.t2iAdapter)s disabled",
        "t2iEnabledControlNetDisabled": "$t(common.t2iAdapter) enabled, $t(common.controlNet)s disabled",
        "controlNetT2IMutexDesc": "$t(common.controlNet) and $t(common.t2iAdapter) at same time is currently unsupported.",
        "amult": "a_mult",
        "autoConfigure": "Auto configure processor",
        "balanced": "Balanced",
        "beginEndStepPercent": "Begin / End Step Percentage",
        "bgth": "bg_th",
        "canny": "Canny",
        "cannyDescription": "Canny edge detection",
        "colorMap": "Color",
        "colorMapDescription": "Generates a color map from the image",
        "coarse": "Coarse",
        "contentShuffle": "Content Shuffle",
        "contentShuffleDescription": "Shuffles the content in an image",
        "control": "Control",
        "controlMode": "Control Mode",
        "crop": "Crop",
        "delete": "Delete",
        "depthMidas": "Depth (Midas)",
        "depthMidasDescription": "Depth map generation using Midas",
        "depthZoe": "Depth (Zoe)",
        "depthZoeDescription": "Depth map generation using Zoe",
        "detectResolution": "Detect Resolution",
        "duplicate": "Duplicate",
        "enableControlnet": "Enable ControlNet",
        "f": "F",
        "fill": "Fill",
        "h": "H",
        "handAndFace": "Hand and Face",
        "hed": "HED",
        "hedDescription": "Holistically-Nested Edge Detection",
        "hideAdvanced": "Hide Advanced",
        "highThreshold": "High Threshold",
        "imageResolution": "Image Resolution",
        "colorMapTileSize": "Tile Size",
        "importImageFromCanvas": "Import Image From Canvas",
        "importMaskFromCanvas": "Import Mask From Canvas",
        "incompatibleBaseModel": "Incompatible base model:",
        "lineart": "Lineart",
        "lineartAnime": "Lineart Anime",
        "lineartAnimeDescription": "Anime-style lineart processing",
        "lineartDescription": "Converts image to lineart",
        "lowThreshold": "Low Threshold",
        "maxFaces": "Max Faces",
        "mediapipeFace": "Mediapipe Face",
        "mediapipeFaceDescription": "Face detection using Mediapipe",
        "megaControl": "Mega Control",
        "minConfidence": "Min Confidence",
        "mlsd": "M-LSD",
        "mlsdDescription": "Minimalist Line Segment Detector",
        "none": "None",
        "noneDescription": "No processing applied",
        "normalBae": "Normal BAE",
        "normalBaeDescription": "Normal BAE processing",
        "openPose": "Openpose",
        "openPoseDescription": "Human pose estimation using Openpose",
        "pidi": "PIDI",
        "pidiDescription": "PIDI image processing",
        "processor": "Processor",
        "prompt": "Prompt",
        "resetControlImage": "Reset Control Image",
        "resize": "Resize",
        "resizeMode": "Resize Mode",
        "safe": "Safe",
        "saveControlImage": "Save Control Image",
        "scribble": "scribble",
        "selectModel": "Select a model",
        "setControlImageDimensions": "Set Control Image Dimensions To W/H",
        "showAdvanced": "Show Advanced",
        "toggleControlNet": "Toggle this ControlNet",
        "w": "W",
        "weight": "Weight",
        "enableIPAdapter": "Enable IP Adapter",
        "ipAdapterModel": "Adapter Model",
        "resetIPAdapterImage": "Reset IP Adapter Image",
        "ipAdapterImageFallback": "No IP Adapter Image Selected"
    },
    "hrf": {
        "hrf": "High Resolution Fix",
        "enableHrf": "Enable High Resolution Fix",
        "enableHrfTooltip": "Generate with a lower initial resolution, upscale to the base resolution, then run Image-to-Image.",
        "upscaleMethod": "Upscale Method",
        "hrfStrength": "High Resolution Fix Strength",
        "strengthTooltip": "Lower values result in fewer details, which may reduce potential artifacts.",
        "metadata": {
            "enabled": "High Resolution Fix Enabled",
            "strength": "High Resolution Fix Strength",
            "method": "High Resolution Fix Method"
        }
    },
    "embedding": {
        "addEmbedding": "Add Embedding",
        "incompatibleModel": "Incompatible base model:",
        "noEmbeddingsLoaded": "No Embeddings Loaded",
        "noMatchingEmbedding": "No matching Embeddings"
    },
    "queue": {
        "queue": "Queue",
        "queueFront": "Add to Front of Queue",
        "queueBack": "Add to Queue",
        "queueCountPrediction": "Add {{predicted}} to Queue",
        "queueMaxExceeded": "Max of {{max_queue_size}} exceeded, would skip {{skip}}",
        "queuedCount": "{{pending}} Pending",
        "queueTotal": "{{total}} Total",
        "queueEmpty": "Queue Empty",
        "enqueueing": "Queueing Batch",
        "resume": "Resume",
        "resumeTooltip": "Resume Processor",
        "resumeSucceeded": "Processor Resumed",
        "resumeFailed": "Problem Resuming Processor",
        "pause": "Pause",
        "pauseTooltip": "Pause Processor",
        "pauseSucceeded": "Processor Paused",
        "pauseFailed": "Problem Pausing Processor",
        "cancel": "Cancel",
        "cancelTooltip": "Cancel Current Item",
        "cancelSucceeded": "Item Canceled",
        "cancelFailed": "Problem Canceling Item",
        "prune": "Prune",
        "pruneTooltip": "Prune {{item_count}} Completed Items",
        "pruneSucceeded": "Pruned {{item_count}} Completed Items from Queue",
        "pruneFailed": "Problem Pruning Queue",
        "clear": "Clear",
        "clearTooltip": "Cancel and Clear All Items",
        "clearSucceeded": "Queue Cleared",
        "clearFailed": "Problem Clearing Queue",
        "cancelBatch": "Cancel Batch",
        "cancelItem": "Cancel Item",
        "cancelBatchSucceeded": "Batch Canceled",
        "cancelBatchFailed": "Problem Canceling Batch",
        "clearQueueAlertDialog": "Clearing the queue immediately cancels any processing items and clears the queue entirely.",
        "clearQueueAlertDialog2": "Are you sure you want to clear the queue?",
        "current": "Current",
        "next": "Next",
        "status": "Status",
        "total": "Total",
        "time": "Time",
        "pending": "Pending",
        "in_progress": "In Progress",
        "completed": "Completed",
        "failed": "Failed",
        "canceled": "Canceled",
        "completedIn": "Completed in",
        "batch": "Batch",
        "batchFieldValues": "Batch Field Values",
        "item": "Item",
        "session": "Session",
        "batchValues": "Batch Values",
        "notReady": "Unable to Queue",
        "batchQueued": "Batch Queued",
        "batchQueuedDesc_one": "Added {{count}} sessions to {{direction}} of queue",
        "batchQueuedDesc_other": "Added {{count}} sessions to {{direction}} of queue",
        "front": "front",
        "back": "back",
        "batchFailedToQueue": "Failed to Queue Batch",
        "graphQueued": "Graph queued",
        "graphFailedToQueue": "Failed to queue graph"
    },
    "invocationCache": {
        "invocationCache": "Invocation Cache",
        "cacheSize": "Cache Size",
        "maxCacheSize": "Max Cache Size",
        "hits": "Cache Hits",
        "misses": "Cache Misses",
        "clear": "Clear",
        "clearSucceeded": "Invocation Cache Cleared",
        "clearFailed": "Problem Clearing Invocation Cache",
        "enable": "Enable",
        "enableSucceeded": "Invocation Cache Enabled",
        "enableFailed": "Problem Enabling Invocation Cache",
        "disable": "Disable",
        "disableSucceeded": "Invocation Cache Disabled",
        "disableFailed": "Problem Disabling Invocation Cache",
        "useCache": "Use Cache"
    },
    "gallery": {
        "allImagesLoaded": "All Images Loaded",
        "assets": "Assets",
        "autoAssignBoardOnClick": "Auto-Assign Board on Click",
        "autoSwitchNewImages": "Auto-Switch to New Images",
        "copy": "Copy",
        "currentlyInUse": "This image is currently in use in the following features:",
        "drop": "Drop",
        "dropOrUpload": "$t(gallery.drop) or Upload",
        "dropToUpload": "$t(gallery.drop) to Upload",
        "deleteImage": "Delete Image",
        "deleteImageBin": "Deleted images will be sent to your operating system's Bin.",
        "deleteImagePermanent": "Deleted images cannot be restored.",
        "download": "Download",
        "featuresWillReset": "If you delete this image, those features will immediately be reset.",
        "galleryImageResetSize": "Reset Size",
        "galleryImageSize": "Image Size",
        "gallerySettings": "Gallery Settings",
        "generations": "Generations",
        "image": "image",
        "loading": "Loading",
        "loadMore": "Load More",
        "maintainAspectRatio": "Maintain Aspect Ratio",
        "noImageSelected": "No Image Selected",
        "noImagesInGallery": "No Images to Display",
        "setCurrentImage": "Set as Current Image",
        "showGenerations": "Show Generations",
        "showUploads": "Show Uploads",
        "singleColumnLayout": "Single Column Layout",
        "starImage": "Star Image",
        "unstarImage": "Unstar Image",
        "unableToLoad": "Unable to load Gallery",
        "uploads": "Uploads",
        "deleteSelection": "Delete Selection",
        "downloadSelection": "Download Selection",
        "preparingDownload": "Preparing Download",
        "preparingDownloadFailed": "Problem Preparing Download",
        "problemDeletingImages": "Problem Deleting Images",
        "problemDeletingImagesDesc": "One or more images could not be deleted"
    },
    "hotkeys": {
        "acceptStagingImage": {
            "desc": "Accept Current Staging Area Image",
            "title": "Accept Staging Image"
        },
        "addNodes": {
            "desc": "Opens the add node menu",
            "title": "Add Nodes"
        },
        "appHotkeys": "App Hotkeys",
        "cancel": {
            "desc": "Cancel image generation",
            "title": "Cancel"
        },
        "changeTabs": {
            "desc": "Switch to another workspace",
            "title": "Change Tabs"
        },
        "clearMask": {
            "desc": "Clear the entire mask",
            "title": "Clear Mask"
        },
        "closePanels": {
            "desc": "Closes open panels",
            "title": "Close Panels"
        },
        "colorPicker": {
            "desc": "Selects the canvas color picker",
            "title": "Select Color Picker"
        },
        "consoleToggle": {
            "desc": "Open and close console",
            "title": "Console Toggle"
        },
        "copyToClipboard": {
            "desc": "Copy current canvas to clipboard",
            "title": "Copy to Clipboard"
        },
        "decreaseBrushOpacity": {
            "desc": "Decreases the opacity of the canvas brush",
            "title": "Decrease Brush Opacity"
        },
        "decreaseBrushSize": {
            "desc": "Decreases the size of the canvas brush/eraser",
            "title": "Decrease Brush Size"
        },
        "decreaseGalleryThumbSize": {
            "desc": "Decreases gallery thumbnails size",
            "title": "Decrease Gallery Image Size"
        },
        "deleteImage": {
            "desc": "Delete the current image",
            "title": "Delete Image"
        },
        "downloadImage": {
            "desc": "Download current canvas",
            "title": "Download Image"
        },
        "eraseBoundingBox": {
            "desc": "Erases the bounding box area",
            "title": "Erase Bounding Box"
        },
        "fillBoundingBox": {
            "desc": "Fills the bounding box with brush color",
            "title": "Fill Bounding Box"
        },
        "focusPrompt": {
            "desc": "Focus the prompt input area",
            "title": "Focus Prompt"
        },
        "galleryHotkeys": "Gallery Hotkeys",
        "generalHotkeys": "General Hotkeys",
        "hideMask": {
            "desc": "Hide and unhide mask",
            "title": "Hide Mask"
        },
        "increaseBrushOpacity": {
            "desc": "Increases the opacity of the canvas brush",
            "title": "Increase Brush Opacity"
        },
        "increaseBrushSize": {
            "desc": "Increases the size of the canvas brush/eraser",
            "title": "Increase Brush Size"
        },
        "increaseGalleryThumbSize": {
            "desc": "Increases gallery thumbnails size",
            "title": "Increase Gallery Image Size"
        },
        "invoke": {
            "desc": "Generate an image",
            "title": "Invoke"
        },
        "keyboardShortcuts": "Keyboard Shortcuts",
        "maximizeWorkSpace": {
            "desc": "Close panels and maximize work area",
            "title": "Maximize Workspace"
        },
        "mergeVisible": {
            "desc": "Merge all visible layers of canvas",
            "title": "Merge Visible"
        },
        "moveTool": {
            "desc": "Allows canvas navigation",
            "title": "Move Tool"
        },
        "nextImage": {
            "desc": "Display the next image in gallery",
            "title": "Next Image"
        },
        "nextStagingImage": {
            "desc": "Next Staging Area Image",
            "title": "Next Staging Image"
        },
        "nodesHotkeys": "Nodes Hotkeys",
        "pinOptions": {
            "desc": "Pin the options panel",
            "title": "Pin Options"
        },
        "previousImage": {
            "desc": "Display the previous image in gallery",
            "title": "Previous Image"
        },
        "previousStagingImage": {
            "desc": "Previous Staging Area Image",
            "title": "Previous Staging Image"
        },
        "quickToggleMove": {
            "desc": "Temporarily toggles Move mode",
            "title": "Quick Toggle Move"
        },
        "redoStroke": {
            "desc": "Redo a brush stroke",
            "title": "Redo Stroke"
        },
        "resetView": {
            "desc": "Reset Canvas View",
            "title": "Reset View"
        },
        "restoreFaces": {
            "desc": "Restore the current image",
            "title": "Restore Faces"
        },
        "saveToGallery": {
            "desc": "Save current canvas to gallery",
            "title": "Save To Gallery"
        },
        "selectBrush": {
            "desc": "Selects the canvas brush",
            "title": "Select Brush"
        },
        "selectEraser": {
            "desc": "Selects the canvas eraser",
            "title": "Select Eraser"
        },
        "sendToImageToImage": {
            "desc": "Send current image to Image to Image",
            "title": "Send To Image To Image"
        },
        "setParameters": {
            "desc": "Use all parameters of the current image",
            "title": "Set Parameters"
        },
        "setPrompt": {
            "desc": "Use the prompt of the current image",
            "title": "Set Prompt"
        },
        "setSeed": {
            "desc": "Use the seed of the current image",
            "title": "Set Seed"
        },
        "showHideBoundingBox": {
            "desc": "Toggle visibility of bounding box",
            "title": "Show/Hide Bounding Box"
        },
        "showInfo": {
            "desc": "Show metadata info of the current image",
            "title": "Show Info"
        },
        "toggleGallery": {
            "desc": "Open and close the gallery drawer",
            "title": "Toggle Gallery"
        },
        "toggleGalleryPin": {
            "desc": "Pins and unpins the gallery to the UI",
            "title": "Toggle Gallery Pin"
        },
        "toggleLayer": {
            "desc": "Toggles mask/base layer selection",
            "title": "Toggle Layer"
        },
        "toggleOptions": {
            "desc": "Open and close the options panel",
            "title": "Toggle Options"
        },
        "toggleSnap": {
            "desc": "Toggles Snap to Grid",
            "title": "Toggle Snap"
        },
        "toggleViewer": {
            "desc": "Open and close Image Viewer",
            "title": "Toggle Viewer"
        },
        "undoStroke": {
            "desc": "Undo a brush stroke",
            "title": "Undo Stroke"
        },
        "unifiedCanvasHotkeys": "Unified Canvas Hotkeys",
        "upscale": {
            "desc": "Upscale the current image",
            "title": "Upscale"
        }
    },
    "metadata": {
        "cfgScale": "CFG scale",
        "cfgRescaleMultiplier": "$t(parameters.cfgRescaleMultiplier)",
        "createdBy": "Created By",
        "fit": "Image to image fit",
        "generationMode": "Generation Mode",
        "height": "Height",
        "hiresFix": "High Resolution Optimization",
        "imageDetails": "Image Details",
        "initImage": "Initial image",
        "metadata": "Metadata",
        "model": "Model",
        "negativePrompt": "Negative Prompt",
        "noImageDetails": "No image details found",
        "noMetaData": "No metadata found",
        "noRecallParameters": "No parameters to recall found",
        "perlin": "Perlin Noise",
        "positivePrompt": "Positive Prompt",
        "recallParameters": "Recall Parameters",
        "scheduler": "Scheduler",
        "seamless": "Seamless",
        "seed": "Seed",
        "steps": "Steps",
        "strength": "Image to image strength",
        "Threshold": "Noise Threshold",
        "variations": "Seed-weight pairs",
        "vae": "VAE",
        "width": "Width",
        "workflow": "Workflow"
    },
    "modelManager": {
        "active": "active",
        "addCheckpointModel": "Add Checkpoint / Safetensor Model",
        "addDifference": "Add Difference",
        "addDiffuserModel": "Add Diffusers",
        "addManually": "Add Manually",
        "addModel": "Add Model",
        "addNew": "Add New",
        "addNewModel": "Add New Model",
        "addSelected": "Add Selected",
        "advanced": "Advanced",
        "allModels": "All Models",
        "alpha": "Alpha",
        "availableModels": "Available Models",
        "baseModel": "Base Model",
        "cached": "cached",
        "cannotUseSpaces": "Cannot Use Spaces",
        "checkpointFolder": "Checkpoint Folder",
        "checkpointModels": "Checkpoints",
        "checkpointOrSafetensors": "$t(common.checkpoint) / $t(common.safetensors)",
        "clearCheckpointFolder": "Clear Checkpoint Folder",
        "closeAdvanced": "Close Advanced",
        "config": "Config",
        "configValidationMsg": "Path to the config file of your model.",
        "conversionNotSupported": "Conversion Not Supported",
        "convert": "Convert",
        "convertingModelBegin": "Converting Model. Please wait.",
        "convertToDiffusers": "Convert To Diffusers",
        "convertToDiffusersHelpText1": "This model will be converted to the 🧨 Diffusers format.",
        "convertToDiffusersHelpText2": "This process will replace your Model Manager entry with the Diffusers version of the same model.",
        "convertToDiffusersHelpText3": "Your checkpoint file on disk WILL be deleted if it is in InvokeAI root folder. If it is in a custom location, then it WILL NOT be deleted.",
        "convertToDiffusersHelpText4": "This is a one time process only. It might take around 30s-60s depending on the specifications of your computer.",
        "convertToDiffusersHelpText5": "Please make sure you have enough disk space. Models generally vary between 2GB-7GB in size.",
        "convertToDiffusersHelpText6": "Do you wish to convert this model?",
        "convertToDiffusersSaveLocation": "Save Location",
        "custom": "Custom",
        "customConfig": "Custom Config",
        "customConfigFileLocation": "Custom Config File Location",
        "customSaveLocation": "Custom Save Location",
        "delete": "Delete",
        "deleteConfig": "Delete Config",
        "deleteModel": "Delete Model",
        "deleteMsg1": "Are you sure you want to delete this model from InvokeAI?",
        "deleteMsg2": "This WILL delete the model from disk if it is in the InvokeAI root folder. If you are using a custom location, then the model WILL NOT be deleted from disk.",
        "description": "Description",
        "descriptionValidationMsg": "Add a description for your model",
        "deselectAll": "Deselect All",
        "diffusersModels": "Diffusers",
        "findModels": "Find Models",
        "formMessageDiffusersModelLocation": "Diffusers Model Location",
        "formMessageDiffusersModelLocationDesc": "Please enter at least one.",
        "formMessageDiffusersVAELocation": "VAE Location",
        "formMessageDiffusersVAELocationDesc": "If not provided, InvokeAI will look for the VAE file inside the model location given above.",
        "height": "Height",
        "heightValidationMsg": "Default height of your model.",
        "ignoreMismatch": "Ignore Mismatches Between Selected Models",
        "importModels": "Import Models",
        "inpainting": "v1 Inpainting",
        "interpolationType": "Interpolation Type",
        "inverseSigmoid": "Inverse Sigmoid",
        "invokeAIFolder": "Invoke AI Folder",
        "invokeRoot": "InvokeAI folder",
        "load": "Load",
        "loraModels": "LoRAs",
        "manual": "Manual",
        "merge": "Merge",
        "mergedModelCustomSaveLocation": "Custom Path",
        "mergedModelName": "Merged Model Name",
        "mergedModelSaveLocation": "Save Location",
        "mergeModels": "Merge Models",
        "model": "Model",
        "modelAdded": "Model Added",
        "modelConversionFailed": "Model Conversion Failed",
        "modelConverted": "Model Converted",
        "modelDeleted": "Model Deleted",
        "modelDeleteFailed": "Failed to delete model",
        "modelEntryDeleted": "Model Entry Deleted",
        "modelExists": "Model Exists",
        "modelLocation": "Model Location",
        "modelLocationValidationMsg": "Provide the path to a local folder where your Diffusers Model is stored",
        "modelManager": "Model Manager",
        "modelMergeAlphaHelp": "Alpha controls blend strength for the models. Lower alpha values lead to lower influence of the second model.",
        "modelMergeHeaderHelp1": "You can merge up to three different models to create a blend that suits your needs.",
        "modelMergeHeaderHelp2": "Only Diffusers are available for merging. If you want to merge a checkpoint model, please convert it to Diffusers first.",
        "modelMergeInterpAddDifferenceHelp": "In this mode, Model 3 is first subtracted from Model 2. The resulting version is blended with Model 1 with the alpha rate set above.",
        "modelOne": "Model 1",
        "modelsFound": "Models Found",
        "modelsMerged": "Models Merged",
        "modelsMergeFailed": "Model Merge Failed",
        "modelsSynced": "Models Synced",
        "modelSyncFailed": "Model Sync Failed",
        "modelThree": "Model 3",
        "modelTwo": "Model 2",
        "modelType": "Model Type",
        "modelUpdated": "Model Updated",
        "modelUpdateFailed": "Model Update Failed",
        "name": "Name",
        "nameValidationMsg": "Enter a name for your model",
        "noCustomLocationProvided": "No Custom Location Provided",
        "noModels": "No Models Found",
        "noModelSelected": "No Model Selected",
        "noModelsFound": "No Models Found",
        "none": "none",
        "notLoaded": "not loaded",
        "oliveModels": "Olives",
        "onnxModels": "Onnx",
        "pathToCustomConfig": "Path To Custom Config",
        "pickModelType": "Pick Model Type",
        "predictionType": "Prediction Type (for Stable Diffusion 2.x Models and occasional Stable Diffusion 1.x Models)",
        "quickAdd": "Quick Add",
        "repo_id": "Repo ID",
        "repoIDValidationMsg": "Online repository of your model",
        "safetensorModels": "SafeTensors",
        "sameFolder": "Same folder",
        "scanAgain": "Scan Again",
        "scanForModels": "Scan For Models",
        "search": "Search",
        "selectAll": "Select All",
        "selectAndAdd": "Select and Add Models Listed Below",
        "selected": "Selected",
        "selectFolder": "Select Folder",
        "selectModel": "Select Model",
        "settings": "Settings",
        "showExisting": "Show Existing",
        "sigmoid": "Sigmoid",
        "simpleModelDesc": "Provide a path to a local Diffusers model, local checkpoint / safetensors model a HuggingFace Repo ID, or a checkpoint/diffusers model URL.",
        "statusConverting": "Converting",
        "syncModels": "Sync Models",
        "syncModelsDesc": "If your models are out of sync with the backend, you can refresh them up using this option. This is generally handy in cases where you manually update your models.yaml file or add models to the InvokeAI root folder after the application has booted.",
        "updateModel": "Update Model",
        "useCustomConfig": "Use Custom Config",
        "v1": "v1",
        "v2_768": "v2 (768px)",
        "v2_base": "v2 (512px)",
        "vae": "VAE",
        "vaeLocation": "VAE Location",
        "vaeLocationValidationMsg": "Path to where your VAE is located.",
        "vaePrecision": "VAE Precision",
        "vaeRepoID": "VAE Repo ID",
        "vaeRepoIDValidationMsg": "Online repository of your VAE",
        "variant": "Variant",
        "weightedSum": "Weighted Sum",
        "width": "Width",
        "widthValidationMsg": "Default width of your model."
    },
    "models": {
        "addLora": "Add LoRA",
        "esrganModel": "ESRGAN Model",
        "loading": "loading",
        "noLoRAsAvailable": "No LoRAs available",
        "noLoRAsLoaded": "No LoRAs Loaded",
        "noMatchingLoRAs": "No matching LoRAs",
        "noMatchingModels": "No matching Models",
        "noModelsAvailable": "No models available",
        "selectLoRA": "Select a LoRA",
        "selectModel": "Select a Model",
        "noLoRAsInstalled": "No LoRAs installed",
        "noRefinerModelsInstalled": "No SDXL Refiner models installed"
    },
    "nodes": {
        "addNode": "Add Node",
        "addNodeToolTip": "Add Node (Shift+A, Space)",
        "addLinearView": "Add to Linear View",
        "animatedEdges": "Animated Edges",
        "animatedEdgesHelp": "Animate selected edges and edges connected to selected nodes",
        "boardField": "Board",
        "boardFieldDescription": "A gallery board",
        "boolean": "Booleans",
        "booleanCollection": "Boolean Collection",
        "booleanCollectionDescription": "A collection of booleans.",
        "booleanDescription": "Booleans are true or false.",
        "booleanPolymorphic": "Boolean Polymorphic",
        "booleanPolymorphicDescription": "A collection of booleans.",
        "cannotConnectInputToInput": "Cannot connect input to input",
        "cannotConnectOutputToOutput": "Cannot connect output to output",
        "cannotConnectToSelf": "Cannot connect to self",
        "cannotDuplicateConnection": "Cannot create duplicate connections",
        "nodePack": "Node pack",
        "clipField": "Clip",
        "clipFieldDescription": "Tokenizer and text_encoder submodels.",
        "collection": "Collection",
        "collectionFieldType": "{{name}} Collection",
        "collectionOrScalarFieldType": "{{name}} Collection|Scalar",
        "collectionDescription": "TODO",
        "collectionItem": "Collection Item",
        "collectionItemDescription": "TODO",
        "colorCodeEdges": "Color-Code Edges",
        "colorCodeEdgesHelp": "Color-code edges according to their connected fields",
        "colorCollection": "A collection of colors.",
        "colorCollectionDescription": "TODO",
        "colorField": "Color",
        "colorFieldDescription": "A RGBA color.",
        "colorPolymorphic": "Color Polymorphic",
        "colorPolymorphicDescription": "A collection of colors.",
        "conditioningCollection": "Conditioning Collection",
        "conditioningCollectionDescription": "Conditioning may be passed between nodes.",
        "conditioningField": "Conditioning",
        "conditioningFieldDescription": "Conditioning may be passed between nodes.",
        "conditioningPolymorphic": "Conditioning Polymorphic",
        "conditioningPolymorphicDescription": "Conditioning may be passed between nodes.",
        "connectionWouldCreateCycle": "Connection would create a cycle",
        "controlCollection": "Control Collection",
        "controlCollectionDescription": "Control info passed between nodes.",
        "controlField": "Control",
        "controlFieldDescription": "Control info passed between nodes.",
        "currentImage": "Current Image",
        "currentImageDescription": "Displays the current image in the Node Editor",
        "denoiseMaskField": "Denoise Mask",
        "denoiseMaskFieldDescription": "Denoise Mask may be passed between nodes",
        "doesNotExist": "does not exist",
        "downloadWorkflow": "Download Workflow JSON",
        "edge": "Edge",
        "enum": "Enum",
        "enumDescription": "Enums are values that may be one of a number of options.",
        "executionStateCompleted": "Completed",
        "executionStateError": "Error",
        "executionStateInProgress": "In Progress",
        "fieldTypesMustMatch": "Field types must match",
        "fitViewportNodes": "Fit View",
        "float": "Float",
        "floatCollection": "Float Collection",
        "floatCollectionDescription": "A collection of floats.",
        "floatDescription": "Floats are numbers with a decimal point.",
        "floatPolymorphic": "Float Polymorphic",
        "floatPolymorphicDescription": "A collection of floats.",
        "fullyContainNodes": "Fully Contain Nodes to Select",
        "fullyContainNodesHelp": "Nodes must be fully inside the selection box to be selected",
        "hideGraphNodes": "Hide Graph Overlay",
        "hideLegendNodes": "Hide Field Type Legend",
        "hideMinimapnodes": "Hide MiniMap",
        "imageCollection": "Image Collection",
        "imageCollectionDescription": "A collection of images.",
        "imageField": "Image",
        "imageFieldDescription": "Images may be passed between nodes.",
        "imagePolymorphic": "Image Polymorphic",
        "imagePolymorphicDescription": "A collection of images.",
        "inputField": "Input Field",
        "inputFields": "Input Fields",
        "inputMayOnlyHaveOneConnection": "Input may only have one connection",
        "inputNode": "Input Node",
        "integer": "Integer",
        "integerCollection": "Integer Collection",
        "integerCollectionDescription": "A collection of integers.",
        "integerDescription": "Integers are whole numbers, without a decimal point.",
        "integerPolymorphic": "Integer Polymorphic",
        "integerPolymorphicDescription": "A collection of integers.",
        "invalidOutputSchema": "Invalid output schema",
        "ipAdapter": "IP-Adapter",
        "ipAdapterCollection": "IP-Adapters Collection",
        "ipAdapterCollectionDescription": "A collection of IP-Adapters.",
        "ipAdapterDescription": "An Image Prompt Adapter (IP-Adapter).",
        "ipAdapterModel": "IP-Adapter Model",
        "ipAdapterModelDescription": "IP-Adapter Model Field",
        "ipAdapterPolymorphic": "IP-Adapter Polymorphic",
        "ipAdapterPolymorphicDescription": "A collection of IP-Adapters.",
        "latentsCollection": "Latents Collection",
        "latentsCollectionDescription": "Latents may be passed between nodes.",
        "latentsField": "Latents",
        "latentsFieldDescription": "Latents may be passed between nodes.",
        "latentsPolymorphic": "Latents Polymorphic",
        "latentsPolymorphicDescription": "Latents may be passed between nodes.",
        "loadingNodes": "Loading Nodes...",
        "loadWorkflow": "Load Workflow",
        "noWorkflow": "No Workflow",
        "loRAModelField": "LoRA",
        "loRAModelFieldDescription": "TODO",
        "mainModelField": "Model",
        "mainModelFieldDescription": "TODO",
        "maybeIncompatible": "May be Incompatible With Installed",
        "mismatchedVersion": "Invalid node: node {{node}} of type {{type}} has mismatched version (try updating?)",
        "missingCanvaInitImage": "Missing canvas init image",
        "missingCanvaInitMaskImages": "Missing canvas init and mask images",
        "missingTemplate": "Invalid node: node {{node}} of type {{type}} missing template (not installed?)",
        "sourceNodeDoesNotExist": "Invalid edge: source/output node {{node}} does not exist",
        "targetNodeDoesNotExist": "Invalid edge: target/input node {{node}} does not exist",
        "sourceNodeFieldDoesNotExist": "Invalid edge: source/output field {{node}}.{{field}} does not exist",
        "targetNodeFieldDoesNotExist": "Invalid edge: target/input field {{node}}.{{field}} does not exist",
        "deletedInvalidEdge": "Deleted invalid edge {{source}} -> {{target}}",
        "noConnectionData": "No connection data",
        "noConnectionInProgress": "No connection in progress",
        "node": "Node",
        "nodeOutputs": "Node Outputs",
        "nodeSearch": "Search for nodes",
        "nodeTemplate": "Node Template",
        "nodeType": "Node Type",
        "noFieldsLinearview": "No fields added to Linear View",
        "noFieldType": "No field type",
        "noImageFoundState": "No initial image found in state",
        "noMatchingNodes": "No matching nodes",
        "noNodeSelected": "No node selected",
        "nodeOpacity": "Node Opacity",
        "nodeVersion": "Node Version",
        "noOutputRecorded": "No outputs recorded",
        "noOutputSchemaName": "No output schema name found in ref object",
        "notes": "Notes",
        "notesDescription": "Add notes about your workflow",
        "oNNXModelField": "ONNX Model",
        "oNNXModelFieldDescription": "ONNX model field.",
        "outputField": "Output Field",
        "outputFieldInInput": "Output field in input",
        "outputFields": "Output Fields",
        "outputNode": "Output node",
        "outputSchemaNotFound": "Output schema not found",
        "pickOne": "Pick One",
        "problemReadingMetadata": "Problem reading metadata from image",
        "problemReadingWorkflow": "Problem reading workflow from image",
        "problemSettingTitle": "Problem Setting Title",
        "reloadNodeTemplates": "Reload Node Templates",
        "removeLinearView": "Remove from Linear View",
        "newWorkflow": "New Workflow",
        "newWorkflowDesc": "Create a new workflow?",
        "newWorkflowDesc2": "Your current workflow has unsaved changes.",
        "scheduler": "Scheduler",
        "schedulerDescription": "TODO",
        "sDXLMainModelField": "SDXL Model",
        "sDXLMainModelFieldDescription": "SDXL model field.",
        "sDXLRefinerModelField": "Refiner Model",
        "sDXLRefinerModelFieldDescription": "TODO",
        "showGraphNodes": "Show Graph Overlay",
        "showLegendNodes": "Show Field Type Legend",
        "showMinimapnodes": "Show MiniMap",
        "skipped": "Skipped",
        "skippedReservedInput": "Skipped reserved input field",
        "skippedReservedOutput": "Skipped reserved output field",
        "skippingInputNoTemplate": "Skipping input field with no template",
        "skippingReservedFieldType": "Skipping reserved field type",
        "skippingUnknownInputType": "Skipping unknown input field type",
        "skippingUnknownOutputType": "Skipping unknown output field type",
        "snapToGrid": "Snap to Grid",
        "snapToGridHelp": "Snap nodes to grid when moved",
        "sourceNode": "Source node",
        "string": "String",
        "stringCollection": "String Collection",
        "stringCollectionDescription": "A collection of strings.",
        "stringDescription": "Strings are text.",
        "stringPolymorphic": "String Polymorphic",
        "stringPolymorphicDescription": "A collection of strings.",
        "unableToLoadWorkflow": "Unable to Load Workflow",
        "unableToParseEdge": "Unable to parse edge",
        "unableToParseNode": "Unable to parse node",
        "unableToUpdateNode": "Unable to update node",
        "unableToValidateWorkflow": "Unable to Validate Workflow",
        "unableToMigrateWorkflow": "Unable to Migrate Workflow",
        "unknownErrorValidatingWorkflow": "Unknown error validating workflow",
        "inputFieldTypeParseError": "Unable to parse type of input field {{node}}.{{field}} ({{message}})",
        "outputFieldTypeParseError": "Unable to parse type of output field {{node}}.{{field}} ({{message}})",
        "unableToExtractSchemaNameFromRef": "unable to extract schema name from ref",
        "unsupportedArrayItemType": "unsupported array item type \"{{type}}\"",
        "unsupportedAnyOfLength": "too many union members ({{count}})",
        "unsupportedMismatchedUnion": "mismatched CollectionOrScalar type with base types {{firstType}} and {{secondType}}",
        "unableToParseFieldType": "unable to parse field type",
        "unableToExtractEnumOptions": "unable to extract enum options",
        "uNetField": "UNet",
        "uNetFieldDescription": "UNet submodel.",
        "unhandledInputProperty": "Unhandled input property",
        "unhandledOutputProperty": "Unhandled output property",
        "unknownField": "Unknown field",
        "unknownFieldType": "$t(nodes.unknownField) type: {{type}}",
        "unknownNode": "Unknown Node",
        "unknownNodeType": "Unknown node type",
        "unknownTemplate": "Unknown Template",
        "unknownInput": "Unknown input: {{name}}",
        "unkownInvocation": "Unknown Invocation type",
        "unknownOutput": "Unknown output: {{name}}",
        "updateNode": "Update Node",
        "updateApp": "Update App",
        "updateAllNodes": "Update Nodes",
        "allNodesUpdated": "All Nodes Updated",
        "unableToUpdateNodes_one": "Unable to update {{count}} node",
        "unableToUpdateNodes_other": "Unable to update {{count}} nodes",
        "vaeField": "Vae",
        "vaeFieldDescription": "Vae submodel.",
        "vaeModelField": "VAE",
        "vaeModelFieldDescription": "TODO",
        "validateConnections": "Validate Connections and Graph",
        "validateConnectionsHelp": "Prevent invalid connections from being made, and invalid graphs from being invoked",
        "unableToGetWorkflowVersion": "Unable to get workflow schema version",
        "unrecognizedWorkflowVersion": "Unrecognized workflow schema version {{version}}",
        "version": "Version",
        "versionUnknown": " Version Unknown",
        "workflow": "Workflow",
        "workflowAuthor": "Author",
        "workflowContact": "Contact",
        "workflowDescription": "Short Description",
        "workflowName": "Name",
        "workflowNotes": "Notes",
        "workflowSettings": "Workflow Editor Settings",
        "workflowTags": "Tags",
        "workflowValidation": "Workflow Validation Error",
        "workflowVersion": "Version",
        "zoomInNodes": "Zoom In",
        "zoomOutNodes": "Zoom Out",
        "betaDesc": "This invocation is in beta. Until it is stable, it may have breaking changes during app updates. We plan to support this invocation long-term.",
        "prototypeDesc": "This invocation is a prototype. It may have breaking changes during app updates and may be removed at any time."
    },
    "parameters": {
        "aspectRatio": "Aspect Ratio",
        "aspectRatioFree": "Free",
        "boundingBoxHeader": "Bounding Box",
        "boundingBoxHeight": "Bounding Box Height",
        "boundingBoxWidth": "Bounding Box Width",
        "cancel": {
            "cancel": "Cancel",
            "immediate": "Cancel immediately",
            "isScheduled": "Canceling",
            "schedule": "Cancel after current iteration",
            "setType": "Set cancel type"
        },
        "cfgScale": "CFG Scale",
        "cfgRescaleMultiplier": "CFG Rescale Multiplier",
        "cfgRescale": "CFG Rescale",
        "clipSkip": "CLIP Skip",
        "clipSkipWithLayerCount": "CLIP Skip {{layerCount}}",
        "closeViewer": "Close Viewer",
        "codeformerFidelity": "Fidelity",
        "coherenceMode": "Mode",
        "coherencePassHeader": "Coherence Pass",
        "coherenceSteps": "Steps",
        "coherenceStrength": "Strength",
        "compositingSettingsHeader": "Compositing Settings",
        "controlNetControlMode": "Control Mode",
        "copyImage": "Copy Image",
        "copyImageToLink": "Copy Image To Link",
        "denoisingStrength": "Denoising Strength",
        "downloadImage": "Download Image",
        "enableNoiseSettings": "Enable Noise Settings",
        "faceRestoration": "Face Restoration",
        "general": "General",
        "height": "Height",
        "hidePreview": "Hide Preview",
        "hiresOptim": "High Res Optimization",
        "hiresStrength": "High Res Strength",
        "hSymmetryStep": "H Symmetry Step",
        "imageFit": "Fit Initial Image To Output Size",
        "images": "Images",
        "imageToImage": "Image to Image",
        "img2imgStrength": "Image To Image Strength",
        "infillMethod": "Infill Method",
        "infillScalingHeader": "Infill and Scaling",
        "info": "Info",
        "initialImage": "Initial Image",
        "invoke": {
            "addingImagesTo": "Adding images to",
            "invoke": "Invoke",
            "missingFieldTemplate": "Missing field template",
            "missingInputForField": "{{nodeLabel}} -> {{fieldLabel}} missing input",
            "missingNodeTemplate": "Missing node template",
            "noControlImageForControlAdapter": "Control Adapter #{{number}} has no control image",
            "noInitialImageSelected": "No initial image selected",
            "noModelForControlAdapter": "Control Adapter #{{number}} has no model selected.",
            "incompatibleBaseModelForControlAdapter": "Control Adapter #{{number}} model is invalid with main model.",
            "noModelSelected": "No model selected",
            "noPrompts": "No prompts generated",
            "noNodesInGraph": "No nodes in graph",
            "readyToInvoke": "Ready to Invoke",
            "systemBusy": "System busy",
            "systemDisconnected": "System disconnected",
            "unableToInvoke": "Unable to Invoke"
        },
        "maskAdjustmentsHeader": "Mask Adjustments",
        "maskBlur": "Blur",
        "maskBlurMethod": "Blur Method",
        "maskEdge": "Mask Edge",
        "negativePromptPlaceholder": "Negative Prompt",
        "noiseSettings": "Noise",
        "noiseThreshold": "Noise Threshold",
        "openInViewer": "Open In Viewer",
        "otherOptions": "Other Options",
        "patchmatchDownScaleSize": "Downscale",
        "perlinNoise": "Perlin Noise",
        "positivePromptPlaceholder": "Positive Prompt",
        "randomizeSeed": "Randomize Seed",
        "manualSeed": "Manual Seed",
        "randomSeed": "Random Seed",
        "restoreFaces": "Restore Faces",
        "iterations": "Iterations",
        "iterationsWithCount_one": "{{count}} Iteration",
        "iterationsWithCount_other": "{{count}} Iterations",
        "scale": "Scale",
        "scaleBeforeProcessing": "Scale Before Processing",
        "scaledHeight": "Scaled H",
        "scaledWidth": "Scaled W",
        "scheduler": "Scheduler",
        "seamCorrectionHeader": "Seam Correction",
        "seamHighThreshold": "High",
        "seamlessTiling": "Seamless Tiling",
        "seamlessXAxis": "X Axis",
        "seamlessYAxis": "Y Axis",
        "seamlessX": "Seamless X",
        "seamlessY": "Seamless Y",
        "seamlessX&Y": "Seamless X & Y",
        "seamLowThreshold": "Low",
        "seed": "Seed",
        "seedWeights": "Seed Weights",
        "imageActions": "Image Actions",
        "sendTo": "Send to",
        "sendToImg2Img": "Send to Image to Image",
        "sendToUnifiedCanvas": "Send To Unified Canvas",
        "showOptionsPanel": "Show Side Panel (O or T)",
        "showPreview": "Show Preview",
        "shuffle": "Shuffle Seed",
        "steps": "Steps",
        "strength": "Strength",
        "symmetry": "Symmetry",
        "tileSize": "Tile Size",
        "toggleLoopback": "Toggle Loopback",
        "type": "Type",
        "upscale": "Upscale (Shift + U)",
        "upscaleImage": "Upscale Image",
        "upscaling": "Upscaling",
        "unmasked": "Unmasked",
        "useAll": "Use All",
        "useSize": "Use Size",
        "useCpuNoise": "Use CPU Noise",
        "cpuNoise": "CPU Noise",
        "gpuNoise": "GPU Noise",
        "useInitImg": "Use Initial Image",
        "usePrompt": "Use Prompt",
        "useSeed": "Use Seed",
        "variationAmount": "Variation Amount",
        "variations": "Variations",
        "vSymmetryStep": "V Symmetry Step",
        "width": "Width",
        "isAllowedToUpscale": {
            "useX2Model": "Image is too large to upscale with x4 model, use x2 model",
            "tooLarge": "Image is too large to upscale, select smaller image"
        }
    },
    "dynamicPrompts": {
        "combinatorial": "Combinatorial Generation",
        "dynamicPrompts": "Dynamic Prompts",
        "enableDynamicPrompts": "Enable Dynamic Prompts",
        "maxPrompts": "Max Prompts",
        "promptsPreview": "Prompts Preview",
        "promptsWithCount_one": "{{count}} Prompt",
        "promptsWithCount_other": "{{count}} Prompts",
        "seedBehaviour": {
            "label": "Seed Behaviour",
            "perIterationLabel": "Seed per Iteration",
            "perIterationDesc": "Use a different seed for each iteration",
            "perPromptLabel": "Seed per Image",
            "perPromptDesc": "Use a different seed for each image"
        }
    },
    "sdxl": {
        "cfgScale": "CFG Scale",
        "concatPromptStyle": "Concatenate Prompt & Style",
        "denoisingStrength": "Denoising Strength",
        "loading": "Loading...",
        "negAestheticScore": "Negative Aesthetic Score",
        "negStylePrompt": "Negative Style Prompt",
        "noModelsAvailable": "No models available",
        "posAestheticScore": "Positive Aesthetic Score",
        "posStylePrompt": "Positive Style Prompt",
        "refiner": "Refiner",
        "refinermodel": "Refiner Model",
        "refinerStart": "Refiner Start",
        "scheduler": "Scheduler",
        "selectAModel": "Select a model",
        "steps": "Steps",
        "useRefiner": "Use Refiner"
    },
    "settings": {
        "alternateCanvasLayout": "Alternate Canvas Layout",
        "antialiasProgressImages": "Antialias Progress Images",
        "autoChangeDimensions": "Update W/H To Model Defaults On Change",
        "beta": "Beta",
        "confirmOnDelete": "Confirm On Delete",
        "consoleLogLevel": "Log Level",
        "developer": "Developer",
        "displayHelpIcons": "Display Help Icons",
        "displayInProgress": "Display Progress Images",
        "enableImageDebugging": "Enable Image Debugging",
        "enableInformationalPopovers": "Enable Informational Popovers",
        "enableInvisibleWatermark": "Enable Invisible Watermark",
        "enableNodesEditor": "Enable Nodes Editor",
        "enableNSFWChecker": "Enable NSFW Checker",
        "experimental": "Experimental",
        "favoriteSchedulers": "Favorite Schedulers",
        "favoriteSchedulersPlaceholder": "No schedulers favorited",
        "general": "General",
        "generation": "Generation",
        "models": "Models",
        "resetComplete": "Web UI has been reset.",
        "resetWebUI": "Reset Web UI",
        "resetWebUIDesc1": "Resetting the web UI only resets the browser's local cache of your images and remembered settings. It does not delete any images from disk.",
        "resetWebUIDesc2": "If images aren't showing up in the gallery or something else isn't working, please try resetting before submitting an issue on GitHub.",
        "saveSteps": "Save images every n steps",
        "shouldLogToConsole": "Console Logging",
        "showAdvancedOptions": "Show Advanced Options",
        "showProgressInViewer": "Show Progress Images in Viewer",
        "ui": "User Interface",
        "useSlidersForAll": "Use Sliders For All Options",
        "clearIntermediatesDisabled": "Queue must be empty to clear intermediates",
        "clearIntermediatesDesc1": "Clearing intermediates will reset your Canvas and ControlNet state.",
        "clearIntermediatesDesc2": "Intermediate images are byproducts of generation, different from the result images in the gallery. Clearing intermediates will free disk space.",
        "clearIntermediatesDesc3": "Your gallery images will not be deleted.",
        "clearIntermediates": "Clear Intermediates",
        "clearIntermediatesWithCount_one": "Clear {{count}} Intermediate",
        "clearIntermediatesWithCount_other": "Clear {{count}} Intermediates",
        "intermediatesCleared_one": "Cleared {{count}} Intermediate",
        "intermediatesCleared_other": "Cleared {{count}} Intermediates",
        "intermediatesClearedFailed": "Problem Clearing Intermediates",
        "reloadingIn": "Reloading in"
    },
    "toast": {
        "addedToBoard": "Added to board",
        "baseModelChangedCleared_one": "Base model changed, cleared or disabled {{count}} incompatible submodel",
        "baseModelChangedCleared_other": "Base model changed, cleared or disabled {{count}} incompatible submodels",
        "canceled": "Processing Canceled",
        "canvasCopiedClipboard": "Canvas Copied to Clipboard",
        "canvasDownloaded": "Canvas Downloaded",
        "canvasMerged": "Canvas Merged",
        "canvasSavedGallery": "Canvas Saved to Gallery",
        "canvasSentControlnetAssets": "Canvas Sent to ControlNet & Assets",
        "connected": "Connected to Server",
        "disconnected": "Disconnected from Server",
        "downloadImageStarted": "Image Download Started",
        "faceRestoreFailed": "Face Restoration Failed",
        "imageCopied": "Image Copied",
        "imageLinkCopied": "Image Link Copied",
        "imageNotLoaded": "No Image Loaded",
        "imageNotLoadedDesc": "Could not find image",
        "imageSaved": "Image Saved",
        "imageSavedToGallery": "Image Saved to Gallery",
        "imageSavingFailed": "Image Saving Failed",
        "imageUploaded": "Image Uploaded",
        "imageUploadFailed": "Image Upload Failed",
        "initialImageNotSet": "Initial Image Not Set",
        "initialImageNotSetDesc": "Could not load initial image",
        "initialImageSet": "Initial Image Set",
        "invalidUpload": "Invalid Upload",
        "loadedWithWarnings": "Workflow Loaded with Warnings",
        "maskSavedAssets": "Mask Saved to Assets",
        "maskSentControlnetAssets": "Mask Sent to ControlNet & Assets",
        "metadataLoadFailed": "Failed to load metadata",
        "modelAdded": "Model Added: {{modelName}}",
        "modelAddedSimple": "Model Added",
        "modelAddFailed": "Model Add Failed",
        "nodesBrokenConnections": "Cannot load. Some connections are broken.",
        "nodesCorruptedGraph": "Cannot load. Graph seems to be corrupted.",
        "nodesLoaded": "Nodes Loaded",
        "nodesLoadedFailed": "Failed To Load Nodes",
        "nodesNotValidGraph": "Not a valid InvokeAI Node Graph",
        "nodesNotValidJSON": "Not a valid JSON",
        "nodesSaved": "Nodes Saved",
        "nodesUnrecognizedTypes": "Cannot load. Graph has unrecognized types",
        "parameterNotSet": "Parameter not set",
        "parameterSet": "Parameter set",
        "parametersFailed": "Problem loading parameters",
        "parametersFailedDesc": "Unable to load init image.",
        "parametersNotSet": "Parameters Not Set",
        "parametersNotSetDesc": "No metadata found for this image.",
        "parametersSet": "Parameters Set",
        "problemCopyingCanvas": "Problem Copying Canvas",
        "problemCopyingCanvasDesc": "Unable to export base layer",
        "problemCopyingImage": "Unable to Copy Image",
        "problemCopyingImageLink": "Unable to Copy Image Link",
        "problemDownloadingCanvas": "Problem Downloading Canvas",
        "problemDownloadingCanvasDesc": "Unable to export base layer",
        "problemImportingMask": "Problem Importing Mask",
        "problemImportingMaskDesc": "Unable to export mask",
        "problemMergingCanvas": "Problem Merging Canvas",
        "problemMergingCanvasDesc": "Unable to export base layer",
        "problemSavingCanvas": "Problem Saving Canvas",
        "problemSavingCanvasDesc": "Unable to export base layer",
        "problemSavingMask": "Problem Saving Mask",
        "problemSavingMaskDesc": "Unable to export mask",
        "promptNotSet": "Prompt Not Set",
        "promptNotSetDesc": "Could not find prompt for this image.",
        "promptSet": "Prompt Set",
        "seedNotSet": "Seed Not Set",
        "seedNotSetDesc": "Could not find seed for this image.",
        "seedSet": "Seed Set",
        "sentToImageToImage": "Sent To Image To Image",
        "sentToUnifiedCanvas": "Sent to Unified Canvas",
        "serverError": "Server Error",
        "setAsCanvasInitialImage": "Set as canvas initial image",
        "setCanvasInitialImage": "Set canvas initial image",
        "setControlImage": "Set as control image",
        "setIPAdapterImage": "Set as IP Adapter Image",
        "setInitialImage": "Set as initial image",
        "setNodeField": "Set as node field",
        "tempFoldersEmptied": "Temp Folder Emptied",
        "uploadFailed": "Upload failed",
        "uploadFailedInvalidUploadDesc": "Must be single PNG or JPEG image",
        "uploadFailedUnableToLoadDesc": "Unable to load file",
        "upscalingFailed": "Upscaling Failed",
        "workflowLoaded": "Workflow Loaded",
        "problemRetrievingWorkflow": "Problem Retrieving Workflow",
        "workflowDeleted": "Workflow Deleted",
        "problemDeletingWorkflow": "Problem Deleting Workflow"
    },
    "tooltip": {
        "feature": {
            "boundingBox": "The bounding box is the same as the Width and Height settings for Text to Image or Image to Image. Only the area in the box will be processed.",
            "faceCorrection": "Face correction with GFPGAN or Codeformer: the algorithm detects faces in the image and corrects any defects. High value will change the image more, resulting in more attractive faces. Codeformer with a higher fidelity preserves the original image at the expense of stronger face correction.",
            "gallery": "Gallery displays generations from the outputs folder as they're created. Settings are stored within files and accesed by context menu.",
            "imageToImage": "Image to Image loads any image as initial, which is then used to generate a new one along with the prompt. The higher the value, the more the result image will change. Values from 0.0 to 1.0 are possible, the recommended range is .25-.75",
            "infillAndScaling": "Manage infill methods (used on masked or erased areas of the canvas) and scaling (useful for small bounding box sizes).",
            "other": "These options will enable alternative processing modes for Invoke. 'Seamless tiling' will create repeating patterns in the output. 'High resolution' is generation in two steps with img2img: use this setting when you want a larger and more coherent image without artifacts. It will take longer than usual txt2img.",
            "prompt": "This is the prompt field. Prompt includes generation objects and stylistic terms. You can add weight (token importance) in the prompt as well, but CLI commands and parameters will not work.",
            "seamCorrection": "Controls the handling of visible seams that occur between generated images on the canvas.",
            "seed": "Seed value affects the initial noise from which the image is formed. You can use the already existing seeds from previous images. 'Noise Threshold' is used to mitigate artifacts at high CFG values (try the 0-10 range), and Perlin to add Perlin noise during generation: both serve to add variation to your outputs.",
            "upscale": "Use ESRGAN to enlarge the image immediately after generation.",
            "variations": "Try a variation with a value between 0.1 and 1.0 to change the result for a given seed. Interesting variations of the seed are between 0.1 and 0.3."
        }
    },
    "popovers": {
        "clipSkip": {
            "heading": "CLIP Skip",
            "paragraphs": [
                "Choose how many layers of the CLIP model to skip.",
                "Some models work better with certain CLIP Skip settings.",
                "A higher value typically results in a less detailed image."
            ]
        },
        "paramNegativeConditioning": {
            "heading": "Negative Prompt",
            "paragraphs": [
                "The generation process avoids the concepts in the negative prompt. Use this to exclude qualities or objects from the output.",
                "Supports Compel syntax and embeddings."
            ]
        },
        "paramPositiveConditioning": {
            "heading": "Positive Prompt",
            "paragraphs": [
                "Guides the generation process. You may use any words or phrases.",
                "Compel and Dynamic Prompts syntaxes and embeddings."
            ]
        },
        "paramScheduler": {
            "heading": "Scheduler",
            "paragraphs": [
                "Scheduler defines how to iteratively add noise to an image or how to update a sample based on a model's output."
            ]
        },
        "compositingBlur": {
            "heading": "Blur",
            "paragraphs": ["The blur radius of the mask."]
        },
        "compositingBlurMethod": {
            "heading": "Blur Method",
            "paragraphs": ["The method of blur applied to the masked area."]
        },
        "compositingCoherencePass": {
            "heading": "Coherence Pass",
            "paragraphs": [
                "A second round of denoising helps to composite the Inpainted/Outpainted image."
            ]
        },
        "compositingCoherenceMode": {
            "heading": "Mode",
            "paragraphs": ["The mode of the Coherence Pass."]
        },
        "compositingCoherenceSteps": {
            "heading": "Steps",
            "paragraphs": [
                "Number of denoising steps used in the Coherence Pass.",
                "Same as the main Steps parameter."
            ]
        },
        "compositingStrength": {
            "heading": "Strength",
            "paragraphs": [
                "Denoising strength for the Coherence Pass.",
                "Same as the Image to Image Denoising Strength parameter."
            ]
        },
        "compositingMaskAdjustments": {
            "heading": "Mask Adjustments",
            "paragraphs": ["Adjust the mask."]
        },
        "controlNetBeginEnd": {
            "heading": "Begin / End Step Percentage",
            "paragraphs": [
                "Which steps of the denoising process will have the ControlNet applied.",
                "ControlNets applied at the beginning of the process guide composition, and ControlNets applied at the end guide details."
            ]
        },
        "controlNetControlMode": {
            "heading": "Control Mode",
            "paragraphs": [
                "Lends more weight to either the prompt or ControlNet."
            ]
        },
        "controlNetResizeMode": {
            "heading": "Resize Mode",
            "paragraphs": [
                "How the ControlNet image will be fit to the image output size."
            ]
        },
        "controlNet": {
            "heading": "ControlNet",
            "paragraphs": [
                "ControlNets provide guidance to the generation process, helping create images with controlled composition, structure, or style, depending on the model selected."
            ]
        },
        "controlNetWeight": {
            "heading": "Weight",
            "paragraphs": [
                "How strongly the ControlNet will impact the generated image."
            ]
        },
        "dynamicPrompts": {
            "heading": "Dynamic Prompts",
            "paragraphs": [
                "Dynamic Prompts parses a single prompt into many.",
                "The basic syntax is \"a {red|green|blue} ball\". This will produce three prompts: \"a red ball\", \"a green ball\" and \"a blue ball\".",
                "You can use the syntax as many times as you like in a single prompt, but be sure to keep the number of prompts generated in check with the Max Prompts setting."
            ]
        },
        "dynamicPromptsMaxPrompts": {
            "heading": "Max Prompts",
            "paragraphs": [
                "Limits the number of prompts that can be generated by Dynamic Prompts."
            ]
        },
        "dynamicPromptsSeedBehaviour": {
            "heading": "Seed Behaviour",
            "paragraphs": [
                "Controls how the seed is used when generating prompts.",
                "Per Iteration will use a unique seed for each iteration. Use this to explore prompt variations on a single seed.",
                "For example, if you have 5 prompts, each image will use the same seed.",
                "Per Image will use a unique seed for each image. This provides more variation."
            ]
        },
        "infillMethod": {
            "heading": "Infill Method",
            "paragraphs": ["Method to infill the selected area."]
        },
        "lora": {
            "heading": "LoRA Weight",
            "paragraphs": [
                "Higher LoRA weight will lead to larger impacts on the final image."
            ]
        },
        "noiseUseCPU": {
            "heading": "Use CPU Noise",
            "paragraphs": [
                "Controls whether noise is generated on the CPU or GPU.",
                "With CPU Noise enabled, a particular seed will produce the same image on any machine.",
                "There is no performance impact to enabling CPU Noise."
            ]
        },
        "paramCFGScale": {
            "heading": "CFG Scale",
            "paragraphs": [
                "Controls how much your prompt influences the generation process."
            ]
        },
        "paramCFGRescaleMultiplier": {
            "heading": "CFG Rescale Multiplier",
            "paragraphs": [
                "Rescale multiplier for CFG guidance, used for models trained using zero-terminal SNR (ztsnr). Suggested value 0.7."
            ]
        },
        "paramDenoisingStrength": {
            "heading": "Denoising Strength",
            "paragraphs": [
                "How much noise is added to the input image.",
                "0 will result in an identical image, while 1 will result in a completely new image."
            ]
        },
        "paramIterations": {
            "heading": "Iterations",
            "paragraphs": [
                "The number of images to generate.",
                "If Dynamic Prompts is enabled, each of the prompts will be generated this many times."
            ]
        },
        "paramModel": {
            "heading": "Model",
            "paragraphs": [
                "Model used for the denoising steps.",
                "Different models are typically trained to specialize in producing particular aesthetic results and content."
            ]
        },
        "paramRatio": {
            "heading": "Aspect Ratio",
            "paragraphs": [
                "The aspect ratio of the dimensions of the image generated.",
                "An image size (in number of pixels) equivalent to 512x512 is recommended for SD1.5 models and a size equivalent to 1024x1024 is recommended for SDXL models."
            ]
        },
        "paramSeed": {
            "heading": "Seed",
            "paragraphs": [
                "Controls the starting noise used for generation.",
                "Disable “Random Seed” to produce identical results with the same generation settings."
            ]
        },
        "paramSteps": {
            "heading": "Steps",
            "paragraphs": [
                "Number of steps that will be performed in each generation.",
                "Higher step counts will typically create better images but will require more generation time."
            ]
        },
        "paramVAE": {
            "heading": "VAE",
            "paragraphs": [
                "Model used for translating AI output into the final image."
            ]
        },
        "paramVAEPrecision": {
            "heading": "VAE Precision",
            "paragraphs": [
                "The precision used during VAE encoding and decoding. FP16/half precision is more efficient, at the expense of minor image variations."
            ]
        },
        "scaleBeforeProcessing": {
            "heading": "Scale Before Processing",
            "paragraphs": [
                "Scales the selected area to the size best suited for the model before the image generation process."
            ]
        }
    },
    "ui": {
        "hideProgressImages": "Hide Progress Images",
        "lockRatio": "Lock Ratio",
        "showProgressImages": "Show Progress Images",
        "swapSizes": "Swap Sizes"
    },
    "unifiedCanvas": {
        "accept": "Accept",
        "activeLayer": "Active Layer",
        "antialiasing": "Antialiasing",
        "autoSaveToGallery": "Auto Save to Gallery",
        "base": "Base",
        "betaClear": "Clear",
        "betaDarkenOutside": "Darken Outside",
        "betaLimitToBox": "Limit To Box",
        "betaPreserveMasked": "Preserve Masked",
        "boundingBox": "Bounding Box",
        "boundingBoxPosition": "Bounding Box Position",
        "brush": "Brush",
        "brushOptions": "Brush Options",
        "brushSize": "Size",
        "canvasDimensions": "Canvas Dimensions",
        "canvasPosition": "Canvas Position",
        "canvasScale": "Canvas Scale",
        "canvasSettings": "Canvas Settings",
        "clearCanvas": "Clear Canvas",
        "clearCanvasHistory": "Clear Canvas History",
        "clearCanvasHistoryConfirm": "Are you sure you want to clear the canvas history?",
        "clearCanvasHistoryMessage": "Clearing the canvas history leaves your current canvas intact, but irreversibly clears the undo and redo history.",
        "clearHistory": "Clear History",
        "clearMask": "Clear Mask (Shift+C)",
        "colorPicker": "Color Picker",
        "copyToClipboard": "Copy to Clipboard",
        "cursorPosition": "Cursor Position",
        "darkenOutsideSelection": "Darken Outside Selection",
        "discardAll": "Discard All",
        "downloadAsImage": "Download As Image",
        "emptyFolder": "Empty Folder",
        "emptyTempImageFolder": "Empty Temp Image Folder",
        "emptyTempImagesFolderConfirm": "Are you sure you want to empty the temp folder?",
        "emptyTempImagesFolderMessage": "Emptying the temp image folder also fully resets the Unified Canvas. This includes all undo/redo history, images in the staging area, and the canvas base layer.",
        "enableMask": "Enable Mask",
        "eraseBoundingBox": "Erase Bounding Box",
        "eraser": "Eraser",
        "fillBoundingBox": "Fill Bounding Box",
        "layer": "Layer",
        "limitStrokesToBox": "Limit Strokes to Box",
        "mask": "Mask",
        "maskingOptions": "Masking Options",
        "mergeVisible": "Merge Visible",
        "move": "Move",
        "next": "Next",
        "preserveMaskedArea": "Preserve Masked Area",
        "previous": "Previous",
        "redo": "Redo",
        "resetView": "Reset View",
        "saveBoxRegionOnly": "Save Box Region Only",
        "saveMask": "Save $t(unifiedCanvas.mask)",
        "saveToGallery": "Save To Gallery",
        "scaledBoundingBox": "Scaled Bounding Box",
        "showCanvasDebugInfo": "Show Additional Canvas Info",
        "showGrid": "Show Grid",
        "showSliders": "Show Sliders",
        "showHide": "Show/Hide",
        "showResultsOn": "Show Results (On)",
        "showResultsOff": "Show Results (Off)",
        "showIntermediates": "Show Intermediates",
        "snapToGrid": "Snap to Grid",
        "undo": "Undo"
    },
    "workflows": {
        "workflows": "Workflows",
        "workflowLibrary": "Library",
        "userWorkflows": "My Workflows",
        "defaultWorkflows": "Default Workflows",
        "openWorkflow": "Open Workflow",
        "uploadWorkflow": "Load from File",
        "deleteWorkflow": "Delete Workflow",
        "unnamedWorkflow": "Unnamed Workflow",
        "downloadWorkflow": "Save to File",
        "saveWorkflow": "Save Workflow",
        "saveWorkflowAs": "Save Workflow As",
        "savingWorkflow": "Saving Workflow...",
        "problemSavingWorkflow": "Problem Saving Workflow",
        "workflowSaved": "Workflow Saved",
        "noRecentWorkflows": "No Recent Workflows",
        "noUserWorkflows": "No User Workflows",
        "noSystemWorkflows": "No System Workflows",
        "problemLoading": "Problem Loading Workflows",
        "loading": "Loading Workflows",
        "noDescription": "No description",
        "searchWorkflows": "Search Workflows",
        "clearWorkflowSearchFilter": "Clear Workflow Search Filter",
        "workflowName": "Workflow Name",
        "newWorkflowCreated": "New Workflow Created",
        "workflowEditorMenu": "Workflow Editor Menu",
        "workflowIsOpen": "Workflow is Open"
    },
    "app": {
        "storeNotInitialized": "Store is not initialized"
    }
}
